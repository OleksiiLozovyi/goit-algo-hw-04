# import sys
# import os
# from pathlib import Path
# from colorama import init, Fore, Style
#
# # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è colorama –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∫–æ–ª—å–æ—Ä–æ–≤–æ–≥–æ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤ —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ
# init(autoreset=True)
#
# def list_directory_contents(directory_path):
#     try:
#         # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤–≤–µ–¥–µ–Ω–∏–π —à–ª—è—Ö –≤ –æ–±'—î–∫—Ç pathlib.Path
#         directory = Path(directory_path)
#
#         # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–≤–µ–¥–µ–Ω–∏–π —à–ª—è—Ö —î –¥—ñ–π—Å–Ω–æ—é –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é
#         if not directory.is_dir():
#             raise NotADirectoryError(f"{directory_path} –Ω–µ —î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é")
#
#         print(f"Contents of directory: {directory}\n")
#
#         # –Ü—Ç–µ—Ä—É—î–º–æ—Å—è –ø–æ –≤–º—ñ—Å—Ç—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
#         for item in directory.iterdir():
#             if item.is_dir():
#                 print(Fore.BLUE + f"üìÅ {item.name}")
#             elif item.is_file():
#                 print(Fore.GREEN + f"üìÑ {item.name}")
#             else:
#                 print(Fore.RED + f"üóÇÔ∏è {item.name}")  # –Ø–∫—â–æ —â–æ—Å—å —ñ–Ω—à–µ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Å–∏–º–≤–æ–ª—ñ—á–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è)
#
#     except FileNotFoundError:
#         print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {directory_path} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
#     except NotADirectoryError as e:
#         print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}")
#     except Exception as e:
#         print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}")
#
# if __name__ == "__main__":
#     if len(sys.argv) != 2:
#         print(Fore.YELLOW + "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python script.py /—à–ª—è—Ö/–¥–æ/–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó")
#     else:
#         directory_path = sys.argv[1]
#         list_directory_contents(directory_path)


from colorama import Fore
import sys
from pathlib import Path



parent_folder_path =  Path(".")

def parse_folder(path):
    for element in path.iterdir():
        if element.is_dir():
            parse_folder(element)
            print(Fore.RED + f"–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è {element.name}")
        if element.is_file():
            print(Fore.GREEN + f"–§–∞–π–ª {element.name}")
parse_folder(parent_folder_path)